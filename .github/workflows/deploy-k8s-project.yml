name: Generate and upload WinCC OA image  

on:
#  push:
#    branches: [ "main", "develop" ]
# we run the pipeline of every PR to main or develop
  pull_request:
    branches: [ "main", "develop" ]
# when we do a release, we deploy to production
  release:
    types: [published]
# also for testing, run it manually
  workflow_dispatch:

jobs:
  get_environment:
    runs-on: ubuntu-latest

    steps:
      - name: Some check on branch
        id: branch_check
        run: |
          ENV_NAME=staging
          if [[ "${{ github.event_name }}" == "release" ]]; then
            ENV_NAME=production
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            ENV_NAME=staging
          else
            ENV_NAME=staging
          fi

          echo "Chosen environment: ${ENV_NAME}"

          echo "env_name=${ENV_NAME}" >> $GITHUB_OUTPUT
                  
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}

  deploy-k8s-project:
    needs: [get_environment]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.get_environment.outputs.env_name }}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Decode kubeconfig
        run: echo ${{ secrets.KUBECONFIG_BASE64 }} | base64 -d > kubeconfig

      - name: Deploy
        run: |
          kubectl --kubeconfig kubeconfig apply -k ./

      - name: Cleanup Kubeconfig
        if: always() # This ensures that the cleanup step runs even if earlier steps fail
        run: |
          rm -f kubeconfig
